# VittoriaDB RAG Backend - Development Dockerfile
# Optimized for development with hot reload and debugging

FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies including development tools
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    build-essential \
    gcc \
    g++ \
    libmagic1 \
    ca-certificates \
    vim \
    htop \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install VittoriaDB binary
RUN ARCH=$(dpkg --print-architecture) && \
    if [ "$ARCH" = "amd64" ]; then ARCH="amd64"; elif [ "$ARCH" = "arm64" ]; then ARCH="arm64"; fi && \
    wget -O vittoriadb.tar.gz "https://github.com/antonellof/VittoriaDB/releases/download/v0.4.0/vittoriadb-v0.4.0-linux-${ARCH}.tar.gz" && \
    tar -xzf vittoriadb.tar.gz && \
    mv vittoriadb-v0.4.0-linux-${ARCH} /usr/local/bin/vittoriadb && \
    chmod +x /usr/local/bin/vittoriadb && \
    rm vittoriadb.tar.gz

# Copy requirements and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip setuptools wheel
RUN pip install --no-cache-dir -r requirements.txt

# Install development dependencies
RUN pip install --no-cache-dir \
    watchdog \
    pytest \
    pytest-asyncio \
    black \
    flake8 \
    mypy \
    ipython

# Create necessary directories
RUN mkdir -p /app/data /app/uploads /app/logs

# Set environment variables for development
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV ENVIRONMENT=development

# Expose port
EXPOSE 8501

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8501/health || exit 1

# Start command with reload for development
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8501", "--reload", "--log-level", "debug"]
