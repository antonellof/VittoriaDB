# VittoriaDB RAG Web UI - Development Docker Compose
# Optimized for development with hot reload and debugging

services:
  # VittoriaDB Server
  vittoriadb:
    build:
      context: ../../
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - VITTORIADB_HOST=0.0.0.0
      - VITTORIADB_PORT=8080
      - VITTORIADB_DATA_DIR=/data
      - VITTORIADB_LOG_LEVEL=DEBUG
    volumes:
      - vittoriadb_dev_data:/data
    networks:
      - vittoriadb-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # VittoriaDB RAG Backend (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8501:8501"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your_openai_api_key_here}
      - VITTORIADB_URL=http://vittoriadb:8080
      - OLLAMA_URL=http://ollama:11434
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - PORT=8501
      - HOST=0.0.0.0
      - LOG_LEVEL=DEBUG
      - ENVIRONMENT=development
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app:rw  # Mount source code for hot reload
      - ./uploads:/app/uploads:rw
      - backend_dev_logs:/app/logs:rw
    networks:
      - vittoriadb-dev-network
    depends_on:
      vittoriadb:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Next.js Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8501
      - NEXT_PUBLIC_WS_URL=ws://localhost:8501
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app:rw  # Mount source code for hot reload
      - /app/node_modules   # Anonymous volume for node_modules
      - /app/.next          # Anonymous volume for .next
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - vittoriadb-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Ollama service for local embeddings
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_dev_data:/root/.ollama
    networks:
      - vittoriadb-dev-network
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_DEBUG=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


networks:
  vittoriadb-dev-network:
    driver: bridge
    name: vittoriadb-dev-network

volumes:
  vittoriadb_dev_data:
    driver: local
    name: vittoriadb_dev_data
  ollama_dev_data:
    driver: local
    name: ollama_dev_data
  backend_dev_logs:
    driver: local
    name: backend_dev_logs
