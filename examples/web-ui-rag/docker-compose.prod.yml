# VittoriaDB RAG Web UI - Production Docker Compose
# Optimized for production deployment with security and performance

services:
  # VittoriaDB Server
  vittoriadb:
    build:
      context: ../../
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - VITTORIADB_HOST=0.0.0.0
      - VITTORIADB_PORT=8080
      - VITTORIADB_DATA_DIR=/data
      - VITTORIADB_LOG_LEVEL=WARN
      - VITTORIADB_MAX_MEMORY=2GB
    volumes:
      - vittoriadb_data:/data
    networks:
      - vittoriadb-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # VittoriaDB RAG Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    ports:
      - "8501:8501"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VITTORIADB_URL=http://vittoriadb:8080
      - OLLAMA_URL=http://ollama:11434
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - PORT=8501
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
    volumes:
      - ./uploads:/app/uploads:rw
      - backend_logs:/app/logs:rw
    networks:
      - vittoriadb-network
    depends_on:
      vittoriadb:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.8'
        reservations:
          memory: 512M
          cpus: '0.3'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: runner
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8501
      - NEXT_PUBLIC_WS_URL=ws://localhost:8501
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - vittoriadb-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.2'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Ollama service for local embeddings
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - vittoriadb-network
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_KEEP_ALIVE=24h
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # Uncomment for GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]


  # Nginx reverse proxy (optional, for production load balancing)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - vittoriadb-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  vittoriadb-network:
    driver: bridge
    name: vittoriadb-prod-network

volumes:
  vittoriadb_data:
    driver: local
    name: vittoriadb_prod_data
  ollama_data:
    driver: local
    name: ollama_prod_data
  backend_logs:
    driver: local
    name: backend_prod_logs
